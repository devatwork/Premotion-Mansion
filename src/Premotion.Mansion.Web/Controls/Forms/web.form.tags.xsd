<?xml version="1.0" encoding="utf-8"?>

<xs:schema targetNamespace="http://schemas.premotion.nl/mansion/1.0/web.form.tags.xsd" elementFormDefault="qualified" xmlns="http://schemas.premotion.nl/mansion/1.0/web.form.tags.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://schemas.premotion.nl/mansion/1.0/stl.xsd" xmlns:ctrls="http://schemas.premotion.nl/mansion/1.0/web.controls.tags.xsd">

	<!-- imports -->
	<xs:import namespace="http://schemas.premotion.nl/mansion/1.0/stl.xsd" />
	<xs:import namespace="http://schemas.premotion.nl/mansion/1.0/web.controls.tags.xsd" />
	
	<!-- attributes -->
	<xs:attributeGroup name="formStyleAttibutes">
		<xs:attribute name="cssClass" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Defines the css class applied to this control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	
	
	<!-- base types -->
	<xs:complexType name="formControlBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="ctrls:containerBase">
				<!-- attributes -->
				<xs:attributeGroup ref="formStyleAttibutes" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="formControlContainerBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form container controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="formControlBase"></xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="formActionControlContainerBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web fomr action container controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="formControlContainerBase"></xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fieldBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form field controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="formControlBase">
					
				<!-- attributes -->
				<xs:attribute name="name" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>Specifies the name of this field.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="label" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>Specifies the label of this field.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="defaultValue" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>Specifies the default value of this field.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="readonly" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Flag indicating whether the field is read-only or not. Default is false.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="explanation" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The explanation for the field.</xs:documentation>
					</xs:annotation>
				</xs:attribute>

			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="listFieldBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form list field controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="fieldBase">
				<!-- attributes -->
				<xs:attribute name="labelProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>When both labelProperty and valueProperty are specified the label/value property mapper is used.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="valueProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>When both labelProperty and valueProperty are specified the label/value property mapper is used.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="numberFieldBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form number field controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="fieldBase">
				<!-- attributes -->
				<xs:attribute name="min" type="xs:int" use="optional">
					<xs:annotation>
						<xs:documentation>The minimum value this field can contain.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="max" type="xs:int" use="optional">
					<xs:annotation>
						<xs:documentation>The maximum value this field can contain.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="treeFieldBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form tree field controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="fieldBase" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="buttonBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form button controls.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="formControlBase">
					
				<!-- attributes -->
				<xs:attribute name="label" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>Specifies the label of this button.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="action" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>The name of the action which this button triggers when clicked.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isDefault" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Flag indicating whether this button is the default button.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="iconClass" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The CSS class of the icon which to display.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="tooltip" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The tooltip of the button.</xs:documentation>
					</xs:annotation>
				</xs:attribute>

			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="validationRuleBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form validation rules.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="formControlBase">
					
				<!-- attributes -->
				<xs:attribute name="message" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The message displayed when the rule fails.</xs:documentation>
					</xs:annotation>
				</xs:attribute>

			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fieldValidationRuleBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form field validation rules.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="validationRuleBase" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="actionBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for all web form actions.</xs:documentation>
		</xs:annotation>
	</xs:complexType>

	<xs:complexType name="messageBase" abstract="true" mixed="true">
		<xs:annotation>
			<xs:documentation>Represents a message. The content of this tag is used as the message.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	
	
	
	<!-- form elements -->
	<xs:element name="form" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a postable web form.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formActionControlContainerBase">
					
					<!-- attributes -->
					<xs:attribute name="name" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Specifies the name of this form.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="dataSource" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the datasource of this form.</xs:documentation>
						</xs:annotation>
					</xs:attribute>

				</xs:extension>
			</xs:complexContent>
		</xs:complexType>

	</xs:element>
	
	
	
	<!-- step elements -->
	<xs:element name="step" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a web form step.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formActionControlContainerBase">
					
					<!-- attributes -->
					<xs:attribute name="label" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Specifies the label of this form.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="headerCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the header.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="bodyCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the body.</xs:documentation>
						</xs:annotation>
					</xs:attribute>

				</xs:extension>
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	<xs:element name="renderScript" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Content of this tag will only be parsed during the render phase. Sections must be rendered to Content.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>
	
	
	
	<!-- field elements -->
	<xs:element name="hidden" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a hidden field control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlBase">
					<!-- attributes -->
					<xs:attribute name="name" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Specifies the name of this field.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="value" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Specifies the value of this field.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	<xs:element name="readonly" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a read-only control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="textbox" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a textbox control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="password" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a password control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="textarea" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a textarea control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="richTextarea" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a rich-text area control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="email" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents an e-mail textbox control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="url" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents an url textbox control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="tagTextbox" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a  textbox in which to enter tags, provides auto complete for them.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="checkbox" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a checkbox control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="date" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a date control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="dateTime" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a date-time control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="selectbox" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a selectbox control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="listFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="multiselect" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a multi select control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="listFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="checkboxList" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a list of checkboxes.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="listFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="nodeSelectorBase">
		<xs:annotation>
			<xs:documentation>Base type for all node selectors.</xs:documentation>
		</xs:annotation>

		<xs:complexContent>
			<xs:extension base="fieldBase">
				<!-- attributes -->
				<xs:attributeGroup ref="stl:parentSourceAttributes" />
				<xs:attribute name="valueProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The property which acts as the value. Must be an identifier of the node (pointer or guid). Default value is guid.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="labelProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The property which acts as the label. Default value is name.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:anyAttribute namespace="##any" processContents="skip" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:element name="singleNodeSelector" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a control to select a single node.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nodeSelectorBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="multiNodeSelector" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a control to select multiple nodes.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="nodeSelectorBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="nodeTreeSelect" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>a control which allows to select a node from a tree.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="treeFieldBase">
					<!-- attributes -->
					<xs:attribute name="allowMultiple" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Indicates whether multiple values can be selected in this controls. Default value is false.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="upload" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents an upload control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="imageUpload" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents an image upload control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="number" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a number control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="numberFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="decimalNumber" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a decimal number control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="numberFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="range" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a number control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="numberFieldBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	
	
	<!-- button elements -->
	<xs:element name="buttonBar" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a bar of buttons.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlContainerBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>
	
	<xs:element name="buttonGroup" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a group of buttons.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlContainerBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	<xs:element name="button" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a button control.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="buttonBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	<xs:element name="linkButton" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents a link button control, which does not post on click.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="buttonBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>
	
	
	
	<!-- button elements -->
	<xs:element name="validationSummary" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Represents the summary of validation messages.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	<xs:element name="requiredFieldValidator" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Checks whether the field is filled in or not.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fieldValidationRuleBase" />
			</xs:complexContent>
		</xs:complexType>

	</xs:element>

	
	
	
	<!-- action elements -->
	<xs:element name="processScriptAction" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Performs an action when the form is posted back to the server.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="actionBase">
					<!-- content -->
					<xs:group ref="stl:defaultContentGroup" />
					<!-- attributes -->
					<xs:attribute name="supportedActions" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Defines the form actions on which this action should be executed.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="requiresValidForm" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Defines whether the action should only be executed when the form is valid or always, default is true.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>

	</xs:element>
	<xs:element name="storeRegistrationAction" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Stores the registration under the specified target.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="actionBase">
					<!-- content -->
					<xs:group ref="stl:defaultContentGroup" />
					<!-- attributes -->
					<xs:attribute name="supportedActions" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Defines the form actions on which this action should be executed.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="requiresValidForm" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Defines whether the action should only be executed when the form is valid or always, default is true.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="parentSource" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Defines the target node under which to store the registration.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>

	</xs:element>



	<!-- container tags -->
	<xs:element name="fieldset" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Groups a set of controls in a fieldset.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlContainerBase">
					<!-- attributes -->
					<xs:attribute name="label" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>The label of the fieldset.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="headerCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the header.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="bodyCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the body.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="collapsibleFieldset" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Groups a set of controls in a collapsible fieldset.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="formControlContainerBase">
					<!-- attributes -->
					<xs:attribute name="label" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>The label of the fieldset.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="headerCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the header.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="bodyCssClasses" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Specifies the CSS classes for the body.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	
	
	<!-- messages -->
	<xs:element name="infoMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Shows an info message for the user.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messageBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="instructionMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Shows an instruction message for the user.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messageBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="successMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Shows a success message for the user.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messageBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="warningMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Shows a warning message for the user.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messageBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="errorMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Shows an error message for the user.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messageBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="addValidationMessage" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Adds a validation error message to the current form.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<!-- attributes -->
			<xs:attribute name="controlName" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>The name of the control for which to show the validation message.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="message" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>The content of the validation message.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

</xs:schema>