<?xml version="1.0" encoding="utf-8"?>

<xs:schema targetNamespace="http://schemas.premotion.nl/mansion/1.0/web.control.provider.tags.xsd" elementFormDefault="qualified" xmlns="http://schemas.premotion.nl/mansion/1.0/web.control.provider.tags.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://schemas.premotion.nl/mansion/1.0/stl.xsd" xmlns:ctrls="http://schemas.premotion.nl/mansion/1.0/web.controls.tags.xsd">

	<!-- imports -->
	<xs:import namespace="http://schemas.premotion.nl/mansion/1.0/stl.xsd" />
	<xs:import namespace="http://schemas.premotion.nl/mansion/1.0/web.controls.tags.xsd" />

	<!-- dataset providers -->
	<xs:element name="fetchDatasetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides data from the specified dataset.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attributeGroup ref="stl:sourceAttributes" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="scriptedDatasetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>The dataset provided is scripted within this tag. The dataset is available in the dataset namespace.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- content -->
					<xs:group ref="stl:defaultContentGroup" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="allTypesDefinitionDatasetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides a dataset containing name/value pairs of all types.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="childTypeDefinitionDatasetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides a dataset containing name/value pairs of all types.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attribute name="type" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>
								The type for which to get the possible child types. Abstract types are filtered out.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="inhertingTypesDefinitionDatasetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides a dataset containing name/value pairs of types inherting from the specified type.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attribute name="type" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>
								The type for which to get the inheriting types.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="csvLabelValuePairProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides a dataset from on a CSV.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attribute name="csv" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>The CSV which to parse. Format it [value],[label];.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	
	
	<!-- nodeset providers -->
	<xs:element name="fetchNodesetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Provides data from the specified nodeset.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attributeGroup ref="stl:sourceAttributes" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="retrieveChildNodesetProvider" substitutionGroup="stl:scriptTag">
		<xs:annotation>
			<xs:documentation>Retrieves the data in the form of a child nodeset query.</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ctrls:dataProviderBase">
					<!-- attributes -->
					<xs:attributeGroup ref="stl:parentSourceAttributes" />
					<xs:attributeGroup ref="stl:pagingAttributes" />
					<xs:attributeGroup ref="stl:filterAttributes" />
					<xs:anyAttribute namespace="##any" processContents="skip" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

</xs:schema>