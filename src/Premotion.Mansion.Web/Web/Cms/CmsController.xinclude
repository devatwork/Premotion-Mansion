<?xml version="1.0" encoding="utf-8" ?>
<mansion xmlns="http://schemas.premotion.nl/mansion/1.0/stl.xsd" xmlns:web="http://schemas.premotion.nl/mansion/1.0/web/tags.xsd">

	<!-- Invoked by the dispatcher when the application is bootstrapped -->
	<declareProcedure procedureName="HandleDefault">

		<!-- we are returning a page -->
		<web:respondDocument contentType="text/html" encoding="UTF-8" cache="false">

			<!-- disable caching -->
			<web:disableOutputCache />

			<!-- check if the user is not authenticated -->
			<if condition="{Not( IsAuthenticated() )}">
				<web:redirectRequest url="{CmsRouteUrl( 'Authentication', 'Authenticate' )}"/>
			</if>

			<!-- check if the user is not allowed to use the CMS -->
			<if condition="{Not( HasPermission( 'Cms', 'use' ) )}">
				<logoff />
				<web:redirectRequest url="{CmsRouteUrl( 'Authentication', 'Authenticate' )}"/>
			</if>
			
			<!-- retrieve the root node -->
			<retrieveNode id="1" target="RootNode" global="true" />
			<web:retrieveNodeByUrl target="CurrentNode" global="true">
				<notFound>
					<fetchNode source="{$RootNode}" target="CurrentNode" global="true" />
				</notFound>
			</web:retrieveNodeByUrl>

			<!-- render the CMS section -->
			<renderSection name="CmsPage">
				<!-- render the header -->
				<renderSection name="CmsHeader">
					<renderSection name="ProfileButton" />
				</renderSection>
				
				<!-- render the content-->
				<renderSection name="Content">
					<!-- render the node navigation tree pane -->
					<invokeProcedure procedureName="RenderNodeNavigationTree" />
					
					<!-- render the browser pane -->
					<invokeProcedure procedureName="RenderBrowser" />
				</renderSection>
				
				<!-- render the footer -->
				<renderSection name="CmsFooter" />
			</renderSection>

		</web:respondDocument>

	</declareProcedure>
	
	
	
	<!-- node navigation tree procedures -->
	<declareProcedure procedureName="RenderNodeNavigationTree">

		<!-- render the content-->
		<renderSection name="NodeNavigationTree">

			<!-- retrieve the root node -->
			<fetchNode source="{$RootNode}" target="LeafNode" global="true" />

			<!-- render the first leaf -->
			<invokeProcedure procedureName="RenderLeaf" />

		</renderSection>

	</declareProcedure>

		<declareProcedure procedureName="RenderLeaf">
			<renderSection name="NodeNavigationTreeLeaf">

				<!-- if the node is select of a parent of the selected node, retrieve the children -->
				<if condition="{Or( IsChildOf( $CurrentNode, $LeafNode  ), IsEqual( CurrentNode.id, LeafNode.id ) )}">
					<retrieveChildNodeset parentSource="{$LeafNode}" target="LeafNodeset">
						<renderSection name="NodeNavigationTreeBranch">
							<loopNodeset source="{$LeafNodeset}" target="LeafNode">
									<invokeProcedure procedureName="RenderLeaf"/>
							</loopNodeset>
						</renderSection>
					</retrieveChildNodeset>
				</if>

			</renderSection>
		</declareProcedure>
	
	
	
	<!-- browser procedures -->
	<declareProcedure procedureName="RenderBrowser">
		<renderSection name="NodeViewer">
			<!-- render the node crumbs -->
			<invokeProcedure procedureName="RenderNodeCrumbPath" />
			
			<!-- render the edit node pane -->
			<invokeProcedure procedureName="RenderNodeFormPane"/>
		
		</renderSection>
	</declareProcedure>

		<!-- render the crumb trail for a node -->
		<declareProcedure procedureName="RenderNodeCrumbPath">
			<renderSection name="NodeCrumbPath">
				<if condition="{Not( IsEqual( CurrentNode.id, RootNode.id ) )}">
					<retrieveParentNodeset childSource="{$CurrentNode}" depth="any" target="ParentNodeset">
						<loopNodeset source="{$ParentNodeset}" target="ParentNode">
							<renderSection name="NodeParentCrumb" />
						</loopNodeset>
					</retrieveParentNodeset>
				</if>
				<renderSection name="NodeActiveCrumb" />
			</renderSection>
		</declareProcedure>
	
		<!-- render the node form pan -->
		<declareProcedure procedureName="RenderNodeFormPane">
			<!-- determine the xform which to display -->
			<setProperties dataspaceName="NodeInfo" type="{NotEmpty( Get.type, CurrentNode.type )}">

				<!-- if the type does not exist show the default form -->
				<if condition="{Not( TypeExists( NodeInfo.type ) )}">
					<setProperties dataspaceName="NodeInfo" type="Default" />
				</if>

				<!-- show the xform of the type -->
				<openScript type="{NodeInfo.type}" extension="xform" checkExists="true">
					<invokeProcedure procedureName="RenderXForm" source="{$CurrentNode}" targetType="{NodeInfo.type}" mode="{NotEmpty( Get.mode, 'update' )}" />
				</openScript>

			</setProperties>
		</declareProcedure>

		<!-- default action for form submits -->
		<declareProcedure procedureName="OnCancel">
			<web:redirectRequest url="{CmsRouteUrl( 'Cms', 'View', FormSourceNode.id )}" />
			<breakExecution />
		</declareProcedure>

		<declareProcedure procedureName="OnCreated">
			<web:redirectRequest url="{CmsRouteUrl( 'Cms', 'View', NewNode.id )}" />
			<breakExecution />
		</declareProcedure>

		<declareProcedure procedureName="OnUpdated">
			<web:redirectRequest url="{CmsRouteUrl( 'Cms', 'View', FormSourceNode.id )}" />
			<breakExecution />
		</declareProcedure>

</mansion>