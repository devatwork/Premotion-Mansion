<?xml version="1.0" encoding="utf-8" ?>
<mansion xmlns="http://schemas.premotion.nl/mansion/1.0/stl.xsd" xmlns:web="http://schemas.premotion.nl/mansion/1.0/web/tags.xsd" xmlns:portal="http://schemas.premotion.nl/mansion/1.0/web/portal/tags.xsd">

	<!-- Invoked when a 404 is thrown -->
	<declareProcedure procedureName="HandleNotFound">
		
		<!-- parse the url -->
		<web:parseApplicationUrl url="{NotEmpty( Headers.Mansion-Forwarded-From-404, Request.url )}" target="Url">
			<!-- check if there is a specific handling procedure for the 404 -->
			<if condition="{ProcedureExists( Concat( 'Handle404For_',  Url.path ) )}">
				<invokeProcedure procedureName="{Concat( 'Handle404For_',  Url.path )}" />
			</if>
		</web:parseApplicationUrl>
		
	</declareProcedure>
	
	
	
	<!-- serves the robots.txt -->
	<declareProcedure procedureName="Handle404For_robots.txt">
		<web:respondDocument contentType="text/plain" cache="true" encoding="UTF-8">
			<if condition="{Application.APPLICATION_IS_LIVE}">
				<renderText>
					<![CDATA[User-agent: *
Sitemap: {NodeUrl( $SiteNode )}/Sitemap.xml
Allow: /]]></renderText>
				<else>
					<renderText>
						<![CDATA[User-agent: *
Disallow: /]]></renderText>
				</else>
			</if>
		</web:respondDocument>
	</declareProcedure>

	
	
	<!-- serves the default favicon.ico -->
	<declareProcedure procedureName="Handle404For_Favicon.ico">
		<!-- check if there is a theme node -->
		<portal:retrieveThemeNode source="{$SiteNode}" target="ThemeNode" global="true">
			<notFound>
				<throw message="Could not determine theme for page, please check configuration" />
			</notFound>
		</portal:retrieveThemeNode>
		
		<!-- redirect request to favicon -->
		<web:redirectRequest url="{StaticResourcePathUrl( Concat( '/Types/', ThemeNode.theme, '/img/icons/favicon.ico' ) )}" permanent="true" />
	</declareProcedure>

	
	
	<!-- serves the sitemap.xml -->
	<declareProcedure procedureName="Handle404For_Sitemap.xml">
		
		<!-- start the sitemap -->
		<web:respondDocument contentType="application/xml" encoding="UTF-8" cache="true">
			<renderXmlDocument defaultNamespace="http://www.sitemaps.org/schemas/sitemap/0.9">
				<registerXmlPrefix prefix="video" namespace="http://www.google.com/schemas/sitemap-video/1.1" />
				
				<!-- render the url set element -->
				<renderXmlElement elementName="urlset">
					<!-- render the site -->
					<invokeProcedure procedureName="PrepareXmlSitemapEntry" source="{$SiteNode}" />
				
					<!-- retrieve and render the pages within this site -->
					<retrieveChildNodeset
						parentSource="{$SiteNode}"
						depth="any"
						baseType="PresentationPage"
						status="published"
						target="PageNodeset">
						<loopNodeset source="{$PageNodeset}" target="PageNode">
							<invokeProcedure procedureName="PrepareXmlSitemapEntry" source="{$PageNode}" />
						</loopNodeset>
					</retrieveChildNodeset>
				
					<!-- retrieve and render the content within this site -->
					<retrieveChildNode parentPointer="1" type="ContentIndexRoot" target="ContentIndexRootNode" global="true" />
					<retrieveChildNodeset
						parentSource="{$ContentIndexRootNode}"
						depth="any"
						baseType="Content"
						siteGuids="{SiteNode.guid}"
						status="published"
						target="ContentNodeset">
						<loopNodeset source="{$ContentNodeset}" target="ContentNode">
							<invokeProcedure procedureName="PrepareXmlSitemapEntry" source="{$ContentNode}" />
						</loopNodeset>
					</retrieveChildNodeset>
				</renderXmlElement>
			</renderXmlDocument>
		</web:respondDocument>
	</declareProcedure>

		<declareProcedure procedureName="PrepareXmlSitemapEntry">
			<fetchNode source="{Arguments.source}" target="EntryNode">
				<openScript type="{EntryNode.type}" checkExists="false">
					<!-- render the entry -->
					<invokeProcedure procedureName="RenderXmlSitemapEntry" checkExists="false" />
				</openScript>
			</fetchNode>
		</declareProcedure>

			<!-- renders a individual XML sitemap entry -->
			<declareProcedure procedureName="RenderXmlSitemapEntry">
				<renderXmlElement elementName="url">
					<!-- render default elements -->
					<renderXmlElement elementName="loc">
						<renderXmlContent>{NodeUrl( $EntryNode )}</renderXmlContent>
					</renderXmlElement>
					<renderXmlElement elementName="lastmod">
						<renderXmlContent>{FormatDate( EntryNode.modified, 'yyyy-MM-ddTHH:mm:ss.fffffffzzz' )}</renderXmlContent>
					</renderXmlElement>
					<renderXmlElement elementName="changefreq">
						<renderXmlContent>daily</renderXmlContent>
					</renderXmlElement>
					<renderXmlElement elementName="priority">
						<renderXmlContent>0.5</renderXmlContent>
					</renderXmlElement>

					<!-- allow rendering of custom content -->
					<invokeProcedure procedureName="RenderXmlSitemapEntryContent" checkExists="false" />
				</renderXmlElement>
			</declareProcedure>

</mansion>